# This is the main configuration file for the application.
# ~~~~~
java.source=1.6

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="pF8Y_3M_to/l]:c4>41LVELLX=7M8t8A7QDn:00hqVhplp9owiE/Hs?raIhu/xU4"

# The application languages
# ~~~~~
application.langs="en"

#
# Specify the base context
#
#application.context="/ix"

#
# Use this to override the hostname
#
#application.host="https://tripod.nih.gov/"

#
# This parameter should point to a valid version as defined in
# the ix.core.api.routes file!
#
application.api="/api/v1"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
application.global=ix.utils.Global

#
# inxight setup
# ~~~~~~~~~~~~~~~
ix {
   home = "data.ix"

   # caching config
   cache {
      base = ${ix.home}/cache
      # 1 day
      time = 86400
   }
   
   # text index setup
   text {
      base = ${ix.home}/text
   }

   structure {
      base = ${ix.home}/structure
      # max number to return
      max = 100
      # this is obsoleted!
      renderer = {
         url = "https://tripod.nih.gov/servlet/renderServletv13"
	 format = svg
      }
   }

   # h2
   h2 {
     base = ${ix.home}/h2
   }

   # file storage
   payload {
     base = ${ix.home}/payload
   }
   debug = 1
}

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `conf/my.application.Router`,
# you may need to define a router file `my.application.routes`.
# Default to Routes in the root package (and `conf/routes`)
application.router=ix.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
db.default.driver=org.h2.Driver
db.default.url="jdbc:h2:"${ix.h2.base}"/inxight"
db.default.user=sa
db.default.password=""
#db.default.logStatements = true

#db.archive.driver=org.h2.Driver
#db.archive.url="jdbc:h2:data/ct_archive"
#db.archive.user=sa
#db.archive.password=""
#db.archive.jndiName=ArchiveDS


# You can expose this datasource via JNDI if needed (Useful for JPA)
db.default.jndiName=DefaultDS

# Evolutions
# ~~~~~
# You can disable evolutions if needed
#evolutionplugin=disabled

# Ebean configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
#
ebean.default="ix.core.adapters.*,ix.core.models.*,ix.ncats.models.*,ix.idg.models.*,ix.ginas.models.*,ix.tox21.models.*"
#ebean.archive="models.*"

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO
logger.com.jolbox = DEBUG

# Logger provided to your application:
logger.application=DEBUG


#
swagger.api.basepath="http://localhost:9000/inxight"
include "akka.conf"
