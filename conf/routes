# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /       crosstalk.ncats.controllers.Granite.index()
POST    /loadmeta       crosstalk.ncats.controllers.Granite.loadMeta()
POST    /loadabs        crosstalk.ncats.controllers.Granite.loadAbs()
POST    /loadpub        crosstalk.ncats.controllers.Granite.loadPub()
POST    /:id    crosstalk.ncats.controllers.Granite.deleteGrant(id:Long)
DELETE    /:id  crosstalk.ncats.controllers.Granite.deleteGrant(id:Long)
POST    /       crosstalk.ncats.controllers.Granite.newGrant()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file   controllers.Assets.at(path="/public", file)

GET     /search         crosstalk.core.controllers.SearchFactory.search(q, top: Int ?= 10, skip: Int ?= 0)
#
# special variables are denoted by @'s and should be specified
# before other resources
#

GET     /admin/principal/:id    crosstalk.core.controllers.AdminFactory.getUser(id:Long)
DELETE  /admin/principal/:id    crosstalk.core.controllers.AdminFactory.deleteUser(id:Long)
GET     /admin/role/:id         crosstalk.core.controllers.AdminFactory.getRole(id:Long)
DELETE  /admin/role/:id         crosstalk.core.controllers.AdminFactory.deleteRole(id:Long)
GET     /admin/resource/:id         crosstalk.core.controllers.AdminFactory.getResource(id:Long)
DELETE  /admin/resource/:id         crosstalk.core.controllers.AdminFactory.deleteResource(id:Long)
GET     /admin/:resource    crosstalk.core.controllers.AdminFactory.get(resource: String)
POST    /admin/principal        crosstalk.core.controllers.AdminFactory.createUser()
POST    /admin/test1    crosstalk.core.controllers.AdminFactory.createTest1()

GET     /$ns<[a-z0-9_]+>/$resource<[a-z0-9_]+>       crosstalk.core.controllers.RouteFactory.get(ns: String, resource: String, pkey: String ?= null)


##################################
# Grant resources
##################################
GET     /grants/@count       crosstalk.ncats.controllers.GrantFactory.count()
GET     /grants/:id  crosstalk.ncats.controllers.GrantFactory.get(id: Long, expand:String ?= null)
GET     /grants/:id/@edits      crosstalk.ncats.controllers.GrantFactory.edits(id:Long)
GET     /grants(:id)  crosstalk.ncats.controllers.GrantFactory.get(id: Long, expand:String ?= null)
GET     /grants(:id)/  crosstalk.ncats.controllers.GrantFactory.get(id: Long, expand: String ?= null)
GET     /grants(:id)/@edits      crosstalk.ncats.controllers.GrantFactory.edits(id:Long)
GET     /grants/:id/  crosstalk.ncats.controllers.GrantFactory.get(id: Long, expand: String ?= null)
GET     /grants/:id/*field  crosstalk.ncats.controllers.GrantFactory.field(id: Long, field:String)
GET     /grants(:id)/*field  crosstalk.ncats.controllers.GrantFactory.field(id: Long, field:String)
GET     /grants  crosstalk.ncats.controllers.GrantFactory.page(top: Int ?=10, skip: Int ?= 0, expand: String ?= null, filter: String ?= null)
POST    /grants  crosstalk.ncats.controllers.GrantFactory.create()
PUT     /grants/:id/*field       crosstalk.ncats.controllers.GrantFactory.update(id:Long, field: String)
PUT     /grants(:id)/*field       crosstalk.ncats.controllers.GrantFactory.update(id:Long, field: String)

##################################
# Investigator resources
##################################
GET     /investigators/:id  crosstalk.core.controllers.InvestigatorFactory.get(id: Long, expand: String ?= null)
GET     /investigators(:id)  crosstalk.core.controllers.InvestigatorFactory.get(id: Long, expand: String ?= null)
GET     /investigators/:id/  crosstalk.core.controllers.InvestigatorFactory.get(id: Long, select: String ?= null)
GET     /investigators/:id/*field  crosstalk.core.controllers.InvestigatorFactory.field(id: Long, field:String)
GET     /investigators(:id)/*field  crosstalk.core.controllers.InvestigatorFactory.field(id: Long, field:String)
GET     /investigators  crosstalk.core.controllers.InvestigatorFactory.page(top: Int ?=10, skip: Int ?= 0, expand: String ?= null, filter: String ?= null)
POST    /investigators  crosstalk.core.controllers.InvestigatorFactory.create()
PUT     /investigators/:id/*field       crosstalk.core.controllers.InvestigatorFactory.update(id:Long, field: String)
PUT     /investigators(:id)/*field       crosstalk.core.controllers.InvestigatorFactory.update(id:Long, field: String)

##################################
# Organization resources
##################################
GET     /organizations/:id      crosstalk.core.controllers.OrganizationFactory.get(id: Long, select: String ?= null)
GET     /organizations(:id)      crosstalk.core.controllers.OrganizationFactory.get(id: Long, select: String ?= null)
GET     /organizations/:id/      crosstalk.core.controllers.OrganizationFactory.get(id: Long, select: String ?= null)
GET     /organizations/:id/*field  crosstalk.core.controllers.OrganizationFactory.field(id: Long, field:String)
GET     /organizations(:id)/*field  crosstalk.core.controllers.OrganizationFactory.field(id: Long, field:String)
GET     /organizations  crosstalk.core.controllers.OrganizationFactory.page(top: Int ?= 10, skip: Int ?= 0, expand: String ?= null, filter: String ?= null)
POST    /organizations  crosstalk.core.controllers.OrganizationFactory.create()
PUT     /organizations/:id/*field       crosstalk.core.controllers.OrganizationFactory.update(id: Long, field: String)
PUT     /organizations(:id)/*field       crosstalk.core.controllers.OrganizationFactory.update(id: Long, field: String)

##################################
# Publication resources
##################################
GET     /publications/:id      crosstalk.core.controllers.PublicationFactory.get(id: Long, select: String ?= null)
GET     /publications(:id)      crosstalk.core.controllers.PublicationFactory.get(id: Long, select: String ?= null)
GET     /publications/:id/      crosstalk.core.controllers.PublicationFactory.get(id: Long, select: String ?= null)
GET     /publications/:id/*field  crosstalk.core.controllers.PublicationFactory.field(id: Long, field:String)
GET     /publications(:id)/*field  crosstalk.core.controllers.PublicationFactory.field(id: Long, field:String)
GET     /publications  crosstalk.core.controllers.PublicationFactory.page(top: Int ?= 10, skip: Int ?= 0, expand: String ?= null, filter: String ?= null)
POST    /publications  crosstalk.core.controllers.PublicationFactory.create()
PUT     /publications/:id/*field       crosstalk.core.controllers.PublicationFactory.update(id: Long, field: String)
PUT     /publications(:id)/*field       crosstalk.core.controllers.PublicationFactory.update(id: Long, field: String)

##################################
# Keyword resources
##################################
GET     /keywords/:id      crosstalk.core.controllers.KeywordFactory.get(id: Long, select: String ?= null)
GET     /keywords(:id)      crosstalk.core.controllers.KeywordFactory.get(id: Long, select: String ?= null)
GET     /keywords/:id/      crosstalk.core.controllers.KeywordFactory.get(id: Long, select: String ?= null)
GET     /keywords(:id)/@edits      crosstalk.core.controllers.KeywordFactory.edits(id:Long)
GET     /keywords/:id/@edits      crosstalk.core.controllers.KeywordFactory.edits(id:Long)
GET     /keywords/:id/*field  crosstalk.core.controllers.KeywordFactory.field(id: Long, field:String)
GET     /keywords(:id)/*field  crosstalk.core.controllers.KeywordFactory.field(id: Long, field:String)
GET     /keywords  crosstalk.core.controllers.KeywordFactory.page(top: Int ?= 10, skip: Int ?= 0, expand: String ?= null, filter: String ?= null)
POST    /keywords  crosstalk.core.controllers.KeywordFactory.create()
PUT     /keywords/:id/*field       crosstalk.core.controllers.KeywordFactory.update(id: Long, field: String)
PUT     /keywords(:id)/*field       crosstalk.core.controllers.KeywordFactory.update(id: Long, field: String)
