#
# UniProt
#
GET	/uniprot	ix.idg.controllers.UniprotFactory.index
POST    /uniprot  ix.idg.controllers.UniprotFactory.fetch

#
# TCRD 
#
GET     /tcrd     ix.idg.controllers.TcrdRegistry.index
GET     /ppi      ix.idg.controllers.TcrdRegistry.ppi
POST    /tcrd     ix.idg.controllers.TcrdRegistry.load
GET     /reindex  ix.idg.controllers.RebuildIndexes.reindex

POST    /api/v1/topics/:kind    ix.idg.controllers.TopicFactory.getTopics(kind: String)
GET     /api/v1/targets/descriptors	ix.idg.controllers.TargetVectorFactory.descriptorVectors
GET     /api/v1/targets/:id/descriptor	ix.idg.controllers.TargetVectorFactory.targetVector(id: Long)

GET     /api/v1/targets/:name/ligands     ix.idg.controllers.IDGApp.getLigandsForTarget(name: String, top: Int ?= 10, skip: Int ?= 0)
GET     /api/v1/targets(:name)/ligands     ix.idg.controllers.IDGApp.getLigandsForTarget(name: String, top: Int ?= 10, skip: Int ?= 0)
GET     /api/v1/targets/:name/ligands/@count     ix.idg.controllers.IDGApp.getLigandsCountForTarget(name: String)
GET     /api/v1/targets/(:name)/ligands/@count     ix.idg.controllers.IDGApp.getLigandsCountForTarget(name: String)

GET     /api/v1/targets/:name/drugs     ix.idg.controllers.IDGApp.getDrugsForTarget(name: String, top: Int ?= 10, skip: Int ?= 0)
GET     /api/v1/targets(:name)/drugs     ix.idg.controllers.IDGApp.getDrugsForTarget(name: String, top: Int ?= 10, skip: Int ?= 0)
GET     /api/v1/targets/:name/drugs/@count     ix.idg.controllers.IDGApp.getDrugsCountForTarget(name: String)
GET     /api/v1/targets(:name)/drugs/@count     ix.idg.controllers.IDGApp.getDrugsCountForTarget(name: String)

GET     /api/v1/targets/:name/diseases     ix.idg.controllers.IDGApp.getDiseasesForTarget(name: String, top: Int ?= 10, skip: Int ?= 0)
GET     /api/v1/targets(:name)/diseases     ix.idg.controllers.IDGApp.getDiseasesForTarget(name: String, top: Int ?= 10, skip: Int ?= 0)
GET     /api/v1/targets/:name/diseases/@count     ix.idg.controllers.IDGApp.getDiseasesCountForTarget(name: String)
GET     /api/v1/targets(:name)/diseases/@count     ix.idg.controllers.IDGApp.getDiseasesCountForTarget(name: String)

GET     /api/v1/targets/:name/generifs     ix.idg.controllers.IDGApp.getGeneRifsForTarget(name: String, top: Int ?= 10, skip: Int ?= 0)
GET     /api/v1/targets(:name)/generifs     ix.idg.controllers.IDGApp.getGeneRifsForTarget(name: String, top: Int ?= 10, skip: Int ?= 0)
GET     /api/v1/targets/:name/generifs/@count     ix.idg.controllers.IDGApp.getGeneRifsCountForTarget(name: String)
GET     /api/v1/targets(:name)/generifs/@count     ix.idg.controllers.IDGApp.getGeneRifsCountForTarget(name: String)

GET     /api/v1/targets/:name/breadcrumb     ix.idg.controllers.IDGApp.getBreadcrumbForTarget(name: String)
GET     /api/v1/targets(:name)/breadcrumb     ix.idg.controllers.IDGApp.getBreadcrumbForTarget(name: String)

GET     /api/v1/targets/:name/pmscore     ix.idg.controllers.IDGApp.getPubMedScoreForTarget(name: String)
GET     /api/v1/targets(:name)/pmscore     ix.idg.controllers.IDGApp.getPubMedScoreForTarget(name: String)

GET     /api/v1/targets/:name/pubtator     ix.idg.controllers.IDGApp.getPubTatorForTarget(name: String)
GET     /api/v1/targets(:name)/pubtator     ix.idg.controllers.IDGApp.getPubTatorForTarget(name: String)

GET     /api/v1/targets/:name/patents     ix.idg.controllers.IDGApp.getPatentsForTarget(name: String)
GET     /api/v1/targets(:name)/patents     ix.idg.controllers.IDGApp.getPatentsForTarget(name: String)

GET     /api/v1/targets/:name/homunculus     ix.idg.controllers.IDGApp.getHomunculusForTarget(name: String, source: String ?= null)
GET     /api/v1/targets(:name)/homunculus     ix.idg.controllers.IDGApp.getHomunculusForTarget(name: String, source: String ?= null)

GET     /api/v1/targets/:ids/pairwise   ix.idg.controllers.TargetVectorFactory.targetPairwiseSimilarity(ids: String)
GET     /api/v1/targets/:id/similarity  ix.idg.controllers.TargetVectorFactory.targetSimilarity(id: Long)
GET     /api/v1/targets/_simmat         ix.idg.controllers.TargetVectorFactory.allPairwiseSimilarity
GET     /api/v1/targets/_dump           ix.idg.controllers.TargetVectorFactory.dumpDescriptorSparse(dim: Int ?= 50)

GET	/targets/similarity	ix.idg.controllers.IDGApp.targetSimilarityForm
POST	/targets/similarity	ix.idg.controllers.IDGApp.targetSimilarity
GET	/surprise		ix.idg.controllers.IDGApp.sampleTermValues(size: Int ?= 10)

#
# main app
#
GET	/		ix.idg.controllers.IDGApp.home
GET     /about    ix.idg.controllers.IDGApp.about
GET     /rfa      ix.idg.controllers.IDGApp.rfa
GET	/api/@swagger	  ix.idg.controllers.IDGApp.apiswagger
GET     /api      ix.idg.controllers.IDGApp.api
GET     /impc     ix.idg.controllers.IDGApp.impc
GET     /pmscore  ix.idg.controllers.IDGApp.pmscore
GET     /help     ix.idg.controllers.IDGApp.help
GET     /faq      ix.idg.controllers.IDGApp.faq
GET     /discussion	ix.idg.controllers.IDGApp.discussion
GET     /index    ix.idg.controllers.IDGApp.index
GET     /kinome   ix.idg.controllers.IDGApp.kinome
GET     /targets  ix.idg.controllers.IDGApp.targets(q: String ?= null, rows: Int ?= 10, page: Int ?= 1)
GET     /targets/compare	ix.idg.controllers.IDGApp.compareTargets2(q: String ?= null)
GET     /targets/facets         ix.idg.controllers.IDGApp.targetfacets(ctx: String ?= null)
GET     /targets/facets/:name	ix.idg.controllers.IDGApp.targetdescriptor(name: String)
GET     /targets/:name		ix.idg.controllers.IDGApp.target(name: String)
GET     /targets/:name/ligands   ix.idg.controllers.IDGApp.ligandsForTarget(name: String, group: String ?= null)
GET     /targets/:name/pviz	ix.idg.controllers.IDGApp.targetpviz(name: String)
GET     /targets/:name/publications	ix.idg.controllers.IDGApp.publicationsForTarget(name: String, top: Int ?= 10, skip: Int ?= 0)
GET     /diseases	ix.idg.controllers.IDGApp.diseases(q: String ?= null, rows: Int ?= 10, page: Int ?= 1)
GET     /diseases/:name	ix.idg.controllers.IDGApp.disease(name: String)
GET     /ligands	ix.idg.controllers.IDGApp.ligands(q: String ?= null, rows: Int ?= 20, page: Int ?= 1)
GET	/ligands/:name	ix.idg.controllers.IDGApp.ligand(name: String)
GET     /search		ix.idg.controllers.IDGApp.search(kind: String ?= null)
GET     /sketcher	ix.idg.controllers.IDGApp.sketcher(s: String ?= null)
POST    /sequence      	ix.idg.controllers.IDGApp.sequence
GET     /tinx		ix.idg.controllers.TINXApp.tinx()
GET     /tinx/target/:acc	ix.idg.controllers.TINXApp.tinxForTarget(acc: String)
GET     /hg/data	ix.idg.controllers.HarmonogramApp.hgForTarget(q: String ?= null, ctx: String ?= null, format: String ?= null, type: String ?= null)
GET     /hg/view	ix.idg.controllers.HarmonogramApp.view(q: String ?= null, ctx: String ?= null)
GET     /hg/ds		ix.idg.controllers.HarmonogramApp.dataSources(field: String ?= null, value: String ?= null)
GET     /hierarchy	ix.idg.controllers.IDGApp.getHierarchy(ctx: String, facet: String)
GET     /kinases	ix.idg.controllers.IDGApp.getKinases(q: String ?= null)
GET     /tdldata	ix.idg.controllers.IDGApp.getTDLData(q: String ?= null, format: String ?= "csv")
GET	/resolve/:q/$format<(json|txt|csv)>	ix.idg.controllers.IDGApp.resolve(q: String, format: String, kind: String ?= null)
POST    /resolve/$kind<(target|ligand|disease)>.$format<(json|txt|csv)>	ix.idg.controllers.IDGApp.resolveBatch(kind: String, format: String)
POST    /batch	ix.idg.controllers.IDGApp.batch
GET     /expression/homunculus	ix.idg.controllers.ExpressionApp.homunculus(acc: String ?= null, source: String ?= null)
GET     /targets/:name/tissue	ix.idg.controllers.IDGApp.targetTissue(name: String)
GET     /struc/$id<[a-f0-9\-]+>.$format<(svg|png|mol|sdf|smi|smiles|mrv)>    ix.idg.controllers.IDGApp.structure(id: String, format: String, size: Int ?= 150, context: String ?= null)
POST    /dossier	ix.idg.controllers.DossierApp.addEntities
GET     /dossier/count	ix.idg.controllers.DossierApp.count
GET     /dossier/view   ix.idg.controllers.DossierApp.view(folder: String ?= null)
GET     /dossier/empty	ix.idg.controllers.DossierApp.emptyCart
GET     /dossier/copyFolder	ix.idg.controllers.DossierApp.copyFolder(oldFolderName: String ?= null, newFolderName: String ?= null)
GET     /dossier/emptyFolder	ix.idg.controllers.DossierApp.emptyFolder(folderName: String ?= null)
GET     /dossier/deleteFolder	ix.idg.controllers.DossierApp.deleteFolder(folderName: String ?= null)
GET     /dossier/mergeFolders	ix.idg.controllers.DossierApp.mergeFolders(folderNames: String ?= null, newFolderName: String ?= null)
GET     /dossier/intersectFolders	ix.idg.controllers.DossierApp.intersectFolders(folder1: String ?= null, folder2: String ?= null, newFolderName: String ?= null)
GET     /dto	ix.idg.controllers.DTOHier.dto(node: String ?= null)
GET     /dtoviz/:label	ix.idg.controllers.DTOHier.dtoViz(label: String)
GET     /dto/:label	ix.idg.controllers.DTOHier.dtoNode(label: String)
GET     /download/:name	ix.idg.controllers.DownloadEntities.download(name)
GET     /sitemap.txt	ix.idg.controllers.IDGApp.sitemap()

# edit
GET     /edit/collection	ix.idg.controllers.IDGApp.editCollection
POST    /edit/collection       	ix.idg.controllers.IDGApp.createCollection
DELETE  /edit/collection/:name  ix.idg.controllers.IDGApp.delCollection(name: String)

# library loaders
GET     /lib/selleck     ix.idg.controllers.ChemLibraryLoader.selleck
POST    /lib/selleck     ix.idg.controllers.ChemLibraryLoader.loadSelleck
GET     /lib/mipe     ix.idg.controllers.ChemLibraryLoader.mipe
POST    /lib/mipe     ix.idg.controllers.ChemLibraryLoader.loadMIPE


->      /clinical   ix.ncats.clinical.Routes
->      /	ix.ncats.Routes
->      /       ix.core.test.Routes

# make sure this goes after the core api
GET     /api/v1/targets(:name)/*field      ix.idg.controllers.IDGApp.getFieldForTarget(name: String, field: String)
GET     /api/v1/targets/:name/*field      ix.idg.controllers.IDGApp.getFieldForTarget(name: String, field: String)

GET     /warm/targets	ix.idg.controllers.IDGApp.targetWarmCache(secret: String)
GET     /:any		ix.idg.controllers.IDGApp.lastUnicorn(any: String)
