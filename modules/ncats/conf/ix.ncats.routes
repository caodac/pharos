#
# NCATS common resources
#
GET	/marvin	ix.ncats.controllers.App.marvin
POST   	/api/v1/smiles	ix.ncats.controllers.App.smiles

# mol conversion based on the chemaxon's convention
POST   	/api/v1/molconvert    ix.ncats.controllers.App.molconvert

# render an arbitrary value
GET	/api/v1/render/:value	ix.ncats.controllers.App.render(value: String, size: Int ?= 150)
#GET	/rendertest	ix.ncats.controllers.App.rendertest

# return a structure in the designated format
GET	/api/v1/structure/$id<[a-f0-9\-]+>.$format<(svg|png|mol|sdf|smi|smiles|mrv)>	ix.ncats.controllers.App.structure(id: String, format: String, size: Int ?= 150, atomMap: String ?= null)
POST    /api/v1/structure	ix.ncats.controllers.App.molinstrument

# return the status of a previous query
GET     /status/*key    ix.ncats.controllers.App.status(key: String)

# cache methods
GET	/cache/@list	ix.ncats.controllers.App.cacheList(top: Int ?= 100, skip: Int ?= 0)
GET	/cache/*key	ix.ncats.controllers.App.cache(key: String)
DELETE	/cache/@clear	ix.ncats.controllers.App.cacheClear
DELETE	/cache/*key	ix.ncats.controllers.App.cacheDelete(key: String)

# return cache statistics
GET     /statistics/@server	ix.ncats.controllers.App.serverStatistics
GET     /uptime	ix.ncats.controllers.App.getUptime

# authentication
GET     /login	ix.ncats.controllers.auth.Authentication.login(url: String ?= null)
GET     /logout	ix.ncats.controllers.auth.Authentication.logout
POST    /login	ix.ncats.controllers.auth.Authentication.authenticate(url: String ?= null)
GET     /session	ix.ncats.controllers.auth.Authentication.secured

->      /	ix.core.test.Routes
->      /       ix.Routes
